from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input, Conv2D, MaxPooling2D, concatenate, Conv2DTranspose, BatchNormalization, Dropout, Lambda, Activation, Add, Concatenate
from tensorflow.keras import regularizers
from tensorflow.keras import backend as K

def build_unet(NUM_CLASSES, IMG_WIDTH, IMG_HEIGHT, IMG_CHANNELS):
	#Build the model
	inputs = Input((IMG_WIDTH, IMG_HEIGHT, IMG_CHANNELS))

	DROPOUT = 0.3
	L2_REG = 1e-07
	L1_REG = 1e-07

	#Contraction path
	c1_res = Conv2D(16, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(inputs)
	c1 = BatchNormalization()(c1_res)
	c1 = Activation("relu")(c1)
	c1 = Dropout(DROPOUT)(c1)
	c1 = Conv2D(16, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c1)
	c1 = BatchNormalization()(c1)
	c1 = Activation("relu")(c1)
	c1 = Dropout(DROPOUT)(c1)
	c1 = Conv2D(16, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c1)
	c1 = BatchNormalization()(c1)
	c1 = Activation("relu")(c1)
	c1 = Dropout(DROPOUT)(c1)
	c1 = Add()([c1, c1_res])
	p1 = MaxPooling2D(pool_size=(2, 2))(c1)

	c2_res = Conv2D(32, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(p1)
	c2 = BatchNormalization()(c2_res)
	c2 = Activation("relu")(c2)
	c2 = Dropout(DROPOUT)(c2)
	c2 = Conv2D(32, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c2)
	c2 = BatchNormalization()(c2)
	c2 = Activation("relu")(c2)
	c2 = Dropout(DROPOUT)(c2)
	c2 = Conv2D(32, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c2)
	c2 = BatchNormalization()(c2)
	c2 = Activation("relu")(c2)
	c2 = Dropout(DROPOUT)(c2)
	c2 = Add()([c2, c2_res])
	#c2 = Concatenate()([c2, p1])
	p2 = MaxPooling2D(pool_size=(2, 2))(c2)
	 
	c3_res = Conv2D(64, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(p2)
	c3 = BatchNormalization()(c3_res)
	c3 = Activation("relu")(c3)
	c3 = Dropout(DROPOUT)(c3)
	c3 = Conv2D(64, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c3)
	c3 = BatchNormalization()(c3)
	c3 = Activation("relu")(c3)
	c3 = Dropout(DROPOUT)(c3)
	c3 = Conv2D(64, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c3)
	c3 = BatchNormalization()(c3)
	c3 = Activation("relu")(c3)
	c3 = Dropout(DROPOUT)(c3)
	c3 = Add()([c3, c3_res])
	#c3 = Concatenate()([c3, p2])
	p3 = MaxPooling2D(pool_size=(2, 2))(c3)
	 
	c4_res = Conv2D(128, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(p3)
	c4 = BatchNormalization()(c4_res)
	c4 = Activation("relu")(c4)
	c4 = Dropout(DROPOUT)(c4)
	c4 = Conv2D(128, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c4)
	c4 = BatchNormalization()(c4)
	c4 = Activation("relu")(c4)
	c4 = Dropout(DROPOUT)(c4)
	c4 = Conv2D(128, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c4)
	c4 = BatchNormalization()(c4)
	c4 = Activation("relu")(c4)
	c4 = Dropout(DROPOUT)(c4)
	c4 = Add()([c4, c4_res])
	#c4 = Concatenate()([c4, p3])
	p4 = MaxPooling2D(pool_size=(2, 2))(c4)
	 
	c5_res = Conv2D(256, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(p4)
	c5 = BatchNormalization()(c5_res)
	c5 = Activation("relu")(c5)
	c5 = Dropout(DROPOUT)(c5)
	c5 = Conv2D(256, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c5)
	c5 = BatchNormalization()(c5)
	c5 = Activation("relu")(c5)
	c5 = Dropout(DROPOUT)(c5)
	c5 = Conv2D(256, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c5)
	c5 = BatchNormalization()(c5)
	c5 = Activation("relu")(c5)
	c5 = Dropout(DROPOUT)(c5)
	c5 = Add()([c5, c5_res])
	#c5 = Concatenate()([c5, p4])
	p5 = MaxPooling2D(pool_size=(2, 2))(c5)
	 
	c6_res = Conv2D(512, kernel_size=(1, 1), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(p5)
	c6 = BatchNormalization()(c6_res)
	c6 = Activation("relu")(c6)
	c6 = Dropout(DROPOUT)(c6)
	c6 = Conv2D(512, kernel_size=(1, 1), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c6)
	c6 = BatchNormalization()(c6)
	c6 = Activation("relu")(c6)
	c6 = Dropout(DROPOUT)(c6)
	c6 = Conv2D(512, kernel_size=(1, 1), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c6)
	c6 = BatchNormalization()(c6)
	c6 = Activation("relu")(c6)
	c6 = Add()([c6, c6_res])
	#c6 = Concatenate()([c6, p5])
	c6 = Dropout(DROPOUT)(c6)

	#Expansive path 
	u7 = Conv2DTranspose(512, kernel_size=(2, 2), strides=(2, 2), padding='same')(c6)
	u7 = concatenate([u7, c5])
	c7_res = Conv2D(512, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(u7)
	c7 = BatchNormalization()(c7_res)
	c7 = Activation("relu")(c7)
	c7 = Dropout(DROPOUT)(c7)
	c7 = Conv2D(512, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c7)
	c7 = BatchNormalization()(c7)
	c7 = Activation("relu")(c7)
	c7 = Dropout(DROPOUT)(c7)
	c7 = Conv2D(512, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c7)
	c7 = BatchNormalization()(c7)
	c7 = Activation("relu")(c7)
	c7 = Add()([c7, c7_res])
	#c7 = Concatenate()([c7, u7])
	c7 = Dropout(DROPOUT)(c7)

	#Expansive path 
	u8 = Conv2DTranspose(256, kernel_size=(2, 2), strides=(2, 2), padding='same')(c7)
	u8 = concatenate([u8, c4])
	c8_res = Conv2D(256, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(u8)
	c8 = BatchNormalization()(c8_res)
	c8 = Activation("relu")(c8)
	c8 = Dropout(DROPOUT)(c8)
	c8 = Conv2D(256, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c8)
	c8 = BatchNormalization()(c8)
	c8 = Activation("relu")(c8)
	c8 = Dropout(DROPOUT)(c8)
	c8 = Conv2D(256, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c8)
	c8 = BatchNormalization()(c8)
	c8 = Activation("relu")(c8)
	c8 = Add()([c8, c8_res])
	#c8 = Concatenate()([c8, u8])
	c8 = Dropout(DROPOUT)(c8)
	 
	u9 = Conv2DTranspose(64, kernel_size=(2, 2), strides=(2, 2), padding='same')(c8)
	u9 = concatenate([u9, c3])
	c9_res = Conv2D(64, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(u9)
	c9 = BatchNormalization()(c9_res)
	c9 = Activation("relu")(c9)
	c9 = Dropout(DROPOUT)(c9)
	c9 = Conv2D(64, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c9)
	c9 = BatchNormalization()(c9)
	c9 = Activation("relu")(c9)
	c9 = Dropout(DROPOUT)(c9)
	c9 = Conv2D(64, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c9)
	c9 = BatchNormalization()(c9)
	c9 = Activation("relu")(c9)
	c9 = Add()([c9, c9_res])
	#c9 = Concatenate()([c9, u9])
	c9 = Dropout(DROPOUT)(c9)
	 
	u10 = Conv2DTranspose(32, kernel_size=(2, 2), strides=(2, 2), padding='same')(c9)
	u10 = concatenate([u10, c2])
	c10_res = Conv2D(32, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(u10)
	c10 = BatchNormalization()(c10_res)
	c10 = Activation("relu")(c10)
	c10 = Dropout(DROPOUT)(c10)
	c10 = Conv2D(32, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c10)
	c10 = BatchNormalization()(c10)
	c10 = Activation("relu")(c10)
	c10 = Dropout(DROPOUT)(c10)
	c10 = Conv2D(32, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c10)
	c10 = BatchNormalization()(c10)
	c10 = Activation("relu")(c10)
	c10 = Add()([c10, c10_res])
	#c10 = Concatenate()([c10, u10])
	c10 = Dropout(DROPOUT)(c10)
	 
	u11 = Conv2DTranspose(16, kernel_size=(2, 2), strides=(2, 2), padding='same')(c10)
	u11 = concatenate([u11, c1])
	c11_res = Conv2D(32, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(u11)
	c11 = BatchNormalization()(c11_res)
	c11 = Activation("relu")(c11)
	c11 = Dropout(DROPOUT)(c11)
	c11 = Conv2D(32, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c11)
	c11 = BatchNormalization()(c11)
	c11 = Activation("relu")(c11)
	c11 = Dropout(DROPOUT)(c11)
	c11 = Conv2D(32, kernel_size=(3, 3), activation=None, padding='same', kernel_regularizer=regularizers.L1L2(l1=L1_REG, l2=L2_REG), activity_regularizer=regularizers.L2(L2_REG) )(c11)
	c11 = BatchNormalization()(c11)
	c11 = Activation("relu")(c11)
	c11 = Add()([c11, c11_res])
	#c11 = Concatenate()([c11, u11])
	c11 = Dropout(DROPOUT)(c11)
	 
	outputs = Conv2D(NUM_CLASSES, kernel_size=(1, 1), activation='softmax')(c11)
	 
	model = Model(inputs=[inputs], outputs=[outputs])

	return model
	